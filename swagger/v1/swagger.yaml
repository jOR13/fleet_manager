---
openapi: 3.0.1
info:
  title: Fleet Manager API
  version: v1
  description: API for managing vehicles and maintenance services
  contact:
    name: Fleet Manager Team
paths:
  "/api/v1/auth/login":
    post:
      summary: Login
      tags:
      - Authentication
      description: Authenticate user and get JWT token
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      name:
                        type: string
                      role:
                        type: string
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                      code:
                        type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: admin@example.com
                password:
                  type: string
                  example: password123
              required:
              - email
              - password
  "/api/v1/vehicles/{vehicle_id}/maintenance_services":
    parameters:
    - name: vehicle_id
      in: path
      description: Vehicle ID
      required: true
      schema:
        type: integer
    get:
      summary: List maintenance services
      tags:
      - Maintenance Services
      description: Get list of maintenance services for a specific vehicle
      security:
      - bearerAuth: []
      parameters:
      - name: page
        in: query
        description: Page number
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        description: Items per page
        example: 10
        schema:
          type: integer
      - name: status
        in: query
        description: "Filter by status:\n * `pending` \n * `in_progress` \n * `completed`
          \n "
        enum:
        - pending
        - in_progress
        - completed
        schema:
          type: string
      - name: service_type
        in: query
        description: Filter by service type
        schema:
          type: string
      - name: priority
        in: query
        description: Filter by priority
        enum:
        - low
        - medium
        - high
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        description:
                          type: string
                        status:
                          type: string
                        service_date:
                          type: string
                          format: date
                        cost_cents:
                          type: integer
                        cost_in_dollars:
                          type: number
                          format: float
                        priority:
                          type: string
                        service_type:
                          type: string
                        completed_at:
                          type: string
                          format: datetime
                          nullable: true
                        vehicle_id:
                          type: integer
                        created_at:
                          type: string
                          format: datetime
                        updated_at:
                          type: string
                          format: datetime
                  pagination:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      total_count:
                        type: integer
                      per_page:
                        type: integer
        '404':
          description: vehicle not found
    post:
      summary: Create maintenance service
      tags:
      - Maintenance Services
      description: Create a new maintenance service for a vehicle
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                maintenance_service:
                  type: object
                  properties:
                    description:
                      type: string
                      example: Oil change and filter replacement
                    status:
                      type: string
                      enum:
                      - pending
                      - in_progress
                      - completed
                      example: pending
                    service_date:
                      type: string
                      format: date
                      example: '2024-01-15'
                    cost_cents:
                      type: integer
                      example: 5000
                    priority:
                      type: string
                      enum:
                      - low
                      - medium
                      - high
                      example: medium
                    service_type:
                      type: string
                      example: Preventive Maintenance
                    completed_at:
                      type: string
                      format: datetime
                      nullable: true
                  required:
                  - description
                  - service_date
  "/api/v1/maintenance_services/{id}":
    parameters:
    - name: id
      in: path
      description: Maintenance Service ID
      required: true
      schema:
        type: integer
    patch:
      summary: Update maintenance service
      tags:
      - Maintenance Services
      description: Update an existing maintenance service
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
        '404':
          description: not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                maintenance_service:
                  type: object
                  properties:
                    description:
                      type: string
                    status:
                      type: string
                      enum:
                      - pending
                      - in_progress
                      - completed
                    service_date:
                      type: string
                      format: date
                    cost_cents:
                      type: integer
                    priority:
                      type: string
                      enum:
                      - low
                      - medium
                      - high
                    service_type:
                      type: string
                    completed_at:
                      type: string
                      format: datetime
                      nullable: true
    delete:
      summary: Delete maintenance service
      tags:
      - Maintenance Services
      description: Delete a maintenance service
      security:
      - bearerAuth: []
      responses:
        '204':
          description: no content
        '404':
          description: not found
  "/api/v1/reports/maintenance_summary":
    get:
      summary: Get maintenance summary report
      tags:
      - Reports
      description: Get comprehensive maintenance summary with totals, groupings, and
        statistics
      security:
      - bearerAuth: []
      parameters:
      - name: from
        in: query
        format: date
        description: Start date (YYYY-MM-DD)
        example: '2024-01-01'
        schema:
          type: string
      - name: to
        in: query
        format: date
        description: End date (YYYY-MM-DD)
        example: '2024-12-31'
        schema:
          type: string
      - name: format
        in: query
        description: "Response format:\n * `json` \n * `csv` \n * `excel` \n "
        enum:
        - json
        - csv
        - excel
        example: json
        schema:
          type: string
      responses:
        '200':
          description: successful - Excel export
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: object
                properties:
                  period:
                    type: object
                    properties:
                      from:
                        type: string
                        format: date
                        nullable: true
                      to:
                        type: string
                        format: date
                        nullable: true
                  totals:
                    type: object
                    properties:
                      total_orders:
                        type: integer
                        description: Total number of maintenance services
                      total_cost_cents:
                        type: integer
                        description: Total cost in cents
                      total_cost_dollars:
                        type: number
                        description: Total cost in dollars
                      average_cost_cents:
                        type: integer
                        description: Average cost in cents
                      average_cost_dollars:
                        type: number
                        description: Average cost in dollars
                  by_status:
                    type: array
                    items:
                      type: object
                      properties:
                        status:
                          type: string
                          enum:
                          - pending
                          - in_progress
                          - completed
                        count:
                          type: integer
                        total_cost_cents:
                          type: integer
                        total_cost_dollars:
                          type: number
                  by_vehicle:
                    type: array
                    items:
                      type: object
                      properties:
                        vehicle:
                          type: object
                          properties:
                            id:
                              type: integer
                            plate:
                              type: string
                            vin:
                              type: string
                            brand:
                              type: string
                            model:
                              type: string
                        total_orders:
                          type: integer
                        total_cost_cents:
                          type: integer
                        total_cost_dollars:
                          type: number
                  top_vehicles_by_cost:
                    type: array
                    items:
                      type: object
                      properties:
                        vehicle:
                          type: object
                          properties:
                            id:
                              type: integer
                            plate:
                              type: string
                            vin:
                              type: string
                            brand:
                              type: string
                            model:
                              type: string
                        total_orders:
                          type: integer
                        total_cost_cents:
                          type: integer
                        total_cost_dollars:
                          type: number
                    description: Top 3 vehicles by maintenance cost
        '400':
          description: bad request - invalid date format
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Invalid date format. Use YYYY-MM-DD
                      code:
                        type: string
                        example: BAD_REQUEST
        '401':
          description: unauthorized
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                      code:
                        type: string
  "/api/v1/vehicles":
    get:
      summary: List vehicles
      tags:
      - Vehicles
      description: Get list of vehicles with optional filtering and pagination
      security:
      - bearerAuth: []
      parameters:
      - name: page
        in: query
        description: Page number
        example: 1
        schema:
          type: integer
      - name: items
        in: query
        description: Items per page
        example: 10
        schema:
          type: integer
      - name: search
        in: query
        description: Search by VIN, plate, brand, or model
        schema:
          type: string
      - name: status
        in: query
        description: "Filter by status:\n * `active` \n * `inactive` \n * `in_maintenance`
          \n "
        enum:
        - active
        - inactive
        - in_maintenance
        schema:
          type: string
      - name: brand
        in: query
        description: Filter by brand
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        vin:
                          type: string
                        brand:
                          type: string
                        model:
                          type: string
                        year:
                          type: integer
                        plate:
                          type: string
                        mileage:
                          type: integer
                        status:
                          type: string
                  pagination:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      total_count:
                        type: integer
                      per_page:
                        type: integer
        '422':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                      code:
                        type: string
    post:
      summary: Create vehicle
      tags:
      - Vehicles
      description: Create a new vehicle
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                vehicle:
                  type: object
                  properties:
                    vin:
                      type: string
                      example: 1HGBH41JXMN109186
                    brand:
                      type: string
                      example: Toyota
                    model:
                      type: string
                      example: Corolla
                    year:
                      type: integer
                      example: 2020
                    plate:
                      type: string
                      example: ABC-123
                    mileage:
                      type: integer
                      example: 15000
                  required:
                  - vin
                  - brand
                  - model
                  - year
                  - plate
  "/api/v1/vehicles/{id}":
    parameters:
    - name: id
      in: path
      description: Vehicle ID
      required: true
      schema:
        type: integer
    get:
      summary: Show vehicle
      tags:
      - Vehicles
      description: Get vehicle details
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
    put:
      summary: Update vehicle
      tags:
      - Vehicles
      description: Update vehicle information
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                vehicle:
                  type: object
                  properties:
                    vin:
                      type: string
                    brand:
                      type: string
                    model:
                      type: string
                    year:
                      type: integer
                    plate:
                      type: string
                    mileage:
                      type: integer
    delete:
      summary: Delete vehicle
      tags:
      - Vehicles
      description: Delete a vehicle
      security:
      - bearerAuth: []
      responses:
        '204':
          description: no content
servers:
- url: http://localhost:3000
  description: Development server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
